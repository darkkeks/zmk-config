/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
  quick-release;
};

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <200>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp ESC         &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P           &kp BSPC
        &kp TAB         &hm LCTRL A     &hm LALT S      &hm LGUI D      &hm LSHFT F     &kp G           &kp H           &hm RSHFT J     &hm RGUI K      &hm LALT L      &hm RCTRL SEMI  &kp SQT
        &kp LG(SPACE)   &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &kp COMMA       &kp DOT         &kp FSLH        &kp RET
                                                        &kp LGUI        &mo 1           &kp SPACE       &sk LSHFT       &mo 2           &kp RALT
      >;
    };

    lower_layer {
      bindings = <
        &kp ESC         &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp BSPC
        &kp TAB         &kp LCTRL       &kp LALT        &kp LGUI        &kp LSHFT       &trans          &kp LEFT        &hm RSHFT DOWN  &hm RGUI UP     &hm LALT RIGHT  &kp RCTRL       &trans
        &kp LG(SPACE)   &bt BT_SEL 0    &bt BT_SEL 1    &out OUT_USB    &out OUT_BLE    &bt BT_CLR      &trans          &trans          &trans          &trans          &trans          &trans
                                                        &kp LGUI        &trans          &kp SPACE       &sk LSHFT       &trans          &kp RALT
      >;
    };

    raise_layer {
      bindings = <
        &kp ESC         &kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT       &kp CARET       &kp AMPS        &kp KP_MULTIPLY &kp LPAR        &kp RPAR        &kp BSPC
        &kp TAB         &kp LCTRL       &kp LALT        &kp LGUI        &kp LSHFT       &trans          &kp MINUS       &hm RSHFT EQUAL &hm RGUI LBKT   &hm LALT RBKT   &hm RCTRL BSLH  &kp GRAVE
        &kp LG(SPACE)   &trans          &trans          &trans          &trans          &trans          &kp UNDER       &kp PLUS        &kp LBRC        &kp RBRC        &kp PIPE        &kp TILDE
                                                        &kp LGUI        &trans          &kp SPACE       &sk LSHFT       &trans          &kp RALT
      >;
    };
  };
};
